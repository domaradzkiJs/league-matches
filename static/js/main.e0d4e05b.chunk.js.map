{"version":3,"sources":["lolApi.data.js","components/champ-icon-and-lvl/champIconAndLvl.component.jsx","components/wrapper/wrapper.component.jsx","components/match-list/match-list.component.jsx","components/search-form/search-form.component.jsx","App.js","index.js"],"names":["myProxy","API_KEY","SummonerQuery","nickName","MatchListQuery","accountId","MatchDetailsQuery","matchId","map","Map","set","ChampIconAndLvl","champId","src","alt","width","height","Wrapper","playerStats","matchList","el","i","key","className","championId","victory","stats","win","get","mapId","MatchList","props","getData","a","arr","fetch","accId","matchListResponse","json","matchListData","matchesIds","matches","gameId","resMatchDetails","matchesDetails","push","length","setState","loading","getPlayerStats","componentDidMount","componentDidUpdate","prevProps","statsArr","state","myId","index","participantIdentities","player","summonerName","includes","participantId","participants","ts","this","onClick","console","log","React","Component","SearchForm","getSummoner","summonerNick","response","summonerData","handleSubmit","event","preventDefault","summonerNickname","document","getElementById","value","initMatchList","summPref","name","onSubmit","type","id","App","summoner","ReactDOM","render"],"mappings":"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","file":"static/js/main.e0d4e05b.chunk.js","sourcesContent":["\r\nconst myProxy = 'https://guarded-plateau-90176.herokuapp.com/';\r\nconst API_KEY = \"RGAPI-46fe25d1-f68a-4c63-a160-4aceaf853faf\";\r\n\r\n\r\n\r\nconst Region = {\r\n\t'RU' : 'ru',\r\n\t'KR' : 'kr',\r\n\t'BR1' : 'br1',\r\n\t'OCE' : 'oc1',\r\n\t'JP' : 'jp1',\r\n\t'NA' : 'na1',\r\n\t'EUNE' : 'eun1',\r\n\t'EUW' : 'euw1',\r\n\t'TR' : 'tr1',\r\n\t'LAN' : 'la1',\r\n\t'LAS' : 'la2'\r\n};\r\n\r\n\r\n\r\n\r\nexport const SummonerQuery = (nickName) => (\r\n\t`${myProxy}https://eun1.api.riotgames.com/lol/summoner/v4/summoners/by-name/${nickName}?api_key=${API_KEY}`\r\n)\r\n\r\nexport const MatchListQuery = (accountId) => (\r\n\t`${myProxy}https://eun1.api.riotgames.com/lol/match/v4/matchlists/by-account/${accountId}?endIndex=10&api_key=${API_KEY}`\r\n)\r\n\r\nexport const MatchDetailsQuery = (matchId) => (\r\n\t`${myProxy}https://eun1.api.riotgames.com/lol/match/v4/matches/${matchId}?api_key=${API_KEY}`\r\n)\r\n\r\n\r\nexport const map = new Map();\r\n\r\nmap.set(4, 'Twisted Treeline');\r\nmap.set(11, `Summoner's Rift`);\r\nmap.set(12, `Howling Abyss`);","import React from 'react';\r\n\r\nconst ChampIconAndLvl = ({champId}) => (\r\n    <div> <img src={`https://cdn.communitydragon.org/9.20.1/champion/${champId}/square`} alt={champId} width='60' height='60'/> </div>\r\n)\r\n\r\nexport default ChampIconAndLvl;","import React from 'react';\r\nimport { map } from '../../lolApi.data';\r\nimport ChampIconAndLvl from '../champ-icon-and-lvl/champIconAndLvl.component';\r\n\r\nconst Wrapper = ({playerStats, matchList}) => (\r\n\r\n\r\n    playerStats.map( (el, i )=> (\r\n        <div key={i} className=\"wrapper\">\r\n       \r\n        <ChampIconAndLvl champId={el.championId} victory={el.stats.win}/>                   \r\n        <div className=\"overview\"> \r\n            <div className='endgame-result'> Victory </div>\r\n            <div className=\"game-mode\"> Ranked Flex </div>\r\n            <div className= \"summ-spells\"> \r\n                <div>sp1 </div>\r\n                <div>sp2</div>\r\n            </div>                        \r\n        </div>\r\n\r\n        <div className=\"game-results\"> \r\n            <div className=\"items-container\"> </div>\r\n            <div className=\"stats\">\r\n                <span>10/10/10</span>\r\n                <span>200</span>\r\n                <span>3,450</span>\r\n            </div>\r\n        </div>\r\n\r\n        <div className=\"game-info\"> \r\n            <div className=\"map\"> {map.get(matchList[i].mapId)} </div>\r\n            <div className=\"data\">\r\n                <span>32:07</span>\r\n                <span>01/12/2019s</span>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n\r\n        )                     \r\n    ) \r\n\r\n)\r\n\r\nexport default Wrapper;","import React from 'react';\r\nimport './match-list.styles.scss';\r\nimport { MatchListQuery, MatchDetailsQuery, map } from '../../lolApi.data';\r\nimport Wrapper from '../wrapper/wrapper.component';\r\nclass MatchList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={matchList:'',\r\n                    loading: true,\r\n                    playerStats:[]\r\n        }\r\n    }\r\n\r\n    getData = async () => {\r\n        let arr=[];\r\n        //fetching list of matches based on accountId\r\n        const matchListResponse = await fetch(MatchListQuery(this.props.accId));\r\n        const matchListData = await matchListResponse.json();   \r\n           \r\n        const matchesIds =  matchListData.matches.map(el=>(el.gameId));\r\n        \r\n        //fetching match details \r\n        // how to save order?\r\n        matchesIds.map(async el => {\r\n            let resMatchDetails =  await fetch(MatchDetailsQuery(el));\r\n            let matchesDetails = await resMatchDetails.json();    \r\n\r\n            arr.push(matchesDetails);     \r\n            \r\n\r\n           if (arr.length===matchesIds.length)  this.setState({matchList: arr, loading:false},this.getPlayerStats)\r\n            /* this.setState({matchList: arr, loading:false}); */\r\n            \r\n            })\r\n    }\r\n\r\n    componentDidMount =  () => {\r\n        this.getData();\r\n       \r\n    }\r\n\r\n    componentDidUpdate = (prevProps) => {\r\n        if ((this.props.nickName) && (this.props.nickName!==prevProps.nickName)) {\r\n            this.getData();\r\n        }\r\n    }\r\n    //get Data based on participandId\r\n    getPlayerStats = () => {\r\n        let statsArr=[];\r\n        this.state.matchList.map((el,i)=>{\r\n            let myId;\r\n            let index = i;\r\n            \r\n            el.participantIdentities.map(el=>{\r\n                // check if nickname is included based on search prop and set his id\r\n                if (el.player.summonerName.includes(this.props.nickName)) {\r\n                    myId = el.participantId;\r\n                    //get searched player stats from all participants data\r\n                    statsArr.push( this.state.matchList[index].participants[myId-1]);\r\n                }\r\n    \r\n                \r\n                this.setState({playerStats:statsArr});\r\n            } \r\n          \r\n            )\r\n\r\n    })          \r\n\r\n    }\r\n\r\n\r\n\r\n/* \r\n    renderMatchList = matchList => {\r\n        \r\n        return (\r\n            <div className=\"matchList-container\">\r\n                {    \r\n                this.state.playerStats.map( (el, i )=> (\r\n\r\n                    <div className=\"wrapper\" key={i}> \r\n                    \r\n                        <div> <img src={`https://cdn.communitydragon.org/9.20.1/champion/${el.championId}/square`} alt={el.championId} width='60' height='60'/> </div> \r\n                        \r\n                        <div className=\"overview\"> \r\n                            <div className='endgame-result'> Victory </div>\r\n                            <div className=\"game-mode\"> Ranked Flex </div>\r\n                            <div className= \"summ-spells\"> \r\n                                <div>sp1 </div>\r\n                                <div>sp2</div>\r\n                            </div>                        \r\n                        </div>\r\n\r\n                        <div className=\"game-results\"> \r\n                            <div className=\"items-container\"> </div>\r\n                            <div className=\"stats\">\r\n                                <span>10/10/10</span>\r\n                                <span>200</span>\r\n                                <span>3,450</span>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"game-info\"> \r\n                            <div className=\"map\"> {map.get(this.state.matchList[i].mapId)} </div>\r\n                            <div className=\"data\">\r\n                                <span>32:07</span>\r\n                                <span>01/12/2019s</span>\r\n                             </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                        )                     \r\n                    ) \r\n                }\r\n                </div>\r\n        )\r\n    } */\r\n\r\n    render() {\r\n\r\n        const ts= this.state;\r\n\r\n        return(\r\n\r\n            <div>\r\n                <h1>{this.props.nickName} Match history </h1>\r\n                  {    \r\n\r\n                   (!this.state.loading) ? \r\n\r\n                   <div className=\"matchList-container\">\r\n                    <Wrapper playerStats={ts.playerStats} matchList={ts.matchList}/>\r\n                  </div>                 \r\n                  \r\n                   \r\n                   :              \r\n                                    \r\n                   \"loading animation\"                      \r\n\r\n                 } \r\n                <button onClick={()=>console.log(this.state) }>getMatchInfo</button>\r\n              \r\n              \r\n            </div> \r\n        )\r\n    }\r\n}\r\n\r\nexport default MatchList;","import React from 'react';\r\nimport { SummonerQuery } from '../../lolApi.data';\r\nimport MatchList from '../match-list/match-list.component';\r\n\r\nclass SearchForm extends React.Component{\r\nconstructor() {\r\n    super();\r\n    \r\n    this.state= {\r\n        summonerNick:'',\r\n        summonerData: ''\r\n        \r\n    }\r\n}\r\n\r\ngetSummoner = async ()=> {\r\n    const response = await fetch(SummonerQuery(this.state.summonerNick));\r\n    const summonerData = await response.json();\r\n    this.setState({summonerData: summonerData});\r\n}\r\n\r\n\r\nhandleSubmit = event => {\r\n    event.preventDefault();\r\n    let summonerNickname= document.getElementById('summonerNickname').value;\r\n    this.setState({summonerNick: summonerNickname},()=> this.getSummoner())\r\n}\r\n\r\ninitMatchList = ()=> {\r\n    const summPref = this.state.summonerData;\r\n    return <MatchList nickName={summPref.name} accId={summPref.accountId} />\r\n}\r\n\r\n\r\n\r\n\r\nrender() {\r\n\r\n    \r\n    \r\n    return (\r\n        <div className=\"search-form\">\r\n            <form onSubmit={this.handleSubmit}>\r\n                <label> Browse my match history </label>\r\n                <input type=\"text\" id=\"summonerNickname\"/>\r\n                <button type=\"submit\"> Look </button>\r\n            </form>\r\n            <button onClick={()=> console.log(this.state)}>Check State</button>\r\n            {\r\n                \r\n                (this.state.summonerData) ? this.initMatchList() : null\r\n            }\r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\n} \r\n\r\n\r\nexport default SearchForm;","import React from 'react';\nimport { MatchDetailsQuery } from './lolApi.data';\nimport SearchForm from './components/search-form/search-form.component';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state= {\n      summoner: null,\n      matchList:null\n    } ;\n  }\n\n/*   componentDidMount = async () => {\n   \n    const response = await fetch(MatchDetailsQuery(2322977330));\n    const data = await response.json();\n    console.log(data);\n  }  */\n\n \n\n  // after Search\n /*  getMatchList = async () => {\n    if (this.state.summoner) {\n    const matchListResponse = await fetch(`${myProxy}https://eun1.api.riotgames.com/lol/match/v4/matchlists/by-account/${this.state.summoner.accountId}?endIndex=10&api_key=RGAPI-488cadb0-b959-44ff-91bb-b147ee494a12`);\n    const matchListData = await matchListResponse.json();\n    this.setState({matchList:matchListData})\n    }\n  } */\n\n  \n\n \n\n  \n\n  render() {\n    return (\n      <div className=\"App\">\n          \n          \n          <SearchForm/>\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}